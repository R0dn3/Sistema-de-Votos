package JFrameVotos;

import LibreriaEstadisticoBusqueda.ConsultaVotos;
import LibreriaEstadisticoBusqueda.ConsultaVotos.ListNode;
import LibreriaEstadisticoBusqueda.VotoBusqueda;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author familia4
 */
public class EstadisticoBusquedaVotos extends javax.swing.JFrame {

    private final ConsultaVotos consultaVotos;

    // Modelo de tabla para mostrar resultados
    private DefaultTableModel modeloTabla;

    public EstadisticoBusquedaVotos() {
        initComponents();

        // Inicializar consultaVotos
        consultaVotos = new ConsultaVotos();

        // Obtener el modelo de la tabla
        modeloTabla = (DefaultTableModel) jTable1.getModel();

        // Cargar los datos en la tabla al inicio
        cargarDatosEnTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDistrito = new javax.swing.JTextField();
        txtSeccion = new javax.swing.JTextField();
        txtMesa = new javax.swing.JTextField();
        buscarVotos = new javax.swing.JToggleButton();
        retroceder = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        estadistico = new javax.swing.JToggleButton();
        txtPartido = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(204, 0, 51));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Estadistico de Busqueda de Votos");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(353, 353, 353)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel5)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Mesa:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Partido:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Seccion:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Distrito:");

        buscarVotos.setBackground(new java.awt.Color(153, 0, 51));
        buscarVotos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        buscarVotos.setForeground(new java.awt.Color(255, 255, 255));
        buscarVotos.setText("Buscar");
        buscarVotos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarVotosActionPerformed(evt);
            }
        });

        retroceder.setBackground(new java.awt.Color(153, 0, 51));
        retroceder.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        retroceder.setForeground(new java.awt.Color(255, 255, 255));
        retroceder.setText("Retroceder");
        retroceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retrocederActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ANIO", "TITULO", "FECHA_ELECCIONES", "DISTRITO", "SECCION", "MESA", "PARTIDO", "NUM_VOTOS"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        estadistico.setBackground(new java.awt.Color(153, 0, 51));
        estadistico.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        estadistico.setForeground(new java.awt.Color(255, 255, 255));
        estadistico.setText("Estadisticas");
        estadistico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadisticoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtDistrito, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel1))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(retroceder)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(txtSeccion, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel2)))))
                            .addComponent(buscarVotos, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(estadistico)
                            .addComponent(txtPartido, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 719, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(428, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDistrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSeccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(txtPartido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscarVotos, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retroceder, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(estadistico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarVotosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarVotosActionPerformed
        String distrito = txtDistrito.getText();
        String seccion = txtSeccion.getText();
        String mesa = txtMesa.getText();
        String partido = txtPartido.getText();
        //String partido = (String) cboPartido.getSelectedItem();

        // Llamada a la función buscarVotos de ConsultaVotos
        String resultados = consultaVotos.buscarVotos(distrito, seccion, mesa, partido);

        // Limpiar la tabla antes de agregar nuevos resultados
        limpiarTabla();

        // Dividir la cadena de resultados en líneas para procesar cada voto encontrado
        String[] lineasResultados = resultados.split("\n");

        // Agregar los resultados a la tabla
        for (String linea : lineasResultados) {
            // Dividir la línea en campos (suponiendo que los campos están separados por algún carácter, como una coma)
            String[] campos = linea.split(",");

            // Asegurarse de que hay suficientes campos para agregar a la tabla
            if (campos.length >= 8) {
                modeloTabla.addRow(new Object[]{campos[0], campos[1], campos[2], campos[3], campos[4], campos[5], campos[6], campos[7]});
            }
        }
    }//GEN-LAST:event_buscarVotosActionPerformed

    private void retrocederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retrocederActionPerformed

        // Cerrar el formulario secundario
        this.dispose();

        // Mostrar nuevamente el formulario principal (puedes crear una instancia si es necesario)
        FormularioPrincipal formularioPrincipal = new FormularioPrincipal();
        formularioPrincipal.setVisible(true); //se utiliza para hacer visible un formulario en una aplicación de escritorio desarrollada en Java utilizando
    }//GEN-LAST:event_retrocederActionPerformed

    private void estadisticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadisticoActionPerformed

        mostrarEstadisticas();
    }//GEN-LAST:event_estadisticoActionPerformed

    // Método para calcular y mostrar estadísticas
    private void mostrarEstadisticas() {
        int totalVotos = 0;
        int[] votosPorPartido = new int[16]; // Asumiendo que hay hasta 16 partidos diferentes

        // Recorrer los resultados de la tabla y calcular estadísticas
        for (int i = 0; i < modeloTabla.getRowCount(); i++) {
            String partido = (String) modeloTabla.getValueAt(i, 6); // Columna del partido en la tabla
            String numVotosStr = (String) modeloTabla.getValueAt(i, 7); // Columna del número de votos en la tabla

            try {
                int numVotos = Integer.parseInt(numVotosStr);
                totalVotos += numVotos;

                // Incrementar el contador de votos para el partido correspondiente
                switch (partido) {
                    case "AEEV":
                        votosPorPartido[0] += numVotos;
                        break;
                    case "FO":
                        votosPorPartido[1] += numVotos;
                        break;
                    case "PACMA":
                        votosPorPartido[2] += numVotos;
                        break;
                    case "PCTE":
                        votosPorPartido[3] += numVotos;
                        break;
                    case "PP":
                        votosPorPartido[4] += numVotos;
                        break;
                    case "PSOE":
                        votosPorPartido[5] += numVotos;
                        break;
                    case "PUEDE":
                        votosPorPartido[6] += numVotos;
                        break;
                    case "PUM J":
                        votosPorPartido[7] += numVotos;
                        break;
                    case "RC":
                        votosPorPartido[8] += numVotos;
                        break;
                    case "SUMAR":
                        votosPorPartido[9] += numVotos;
                        break;
                    case "VOX":
                        votosPorPartido[10] += numVotos;
                        break;
                    case "VALIDOS":
                        votosPorPartido[11] += numVotos;
                        break;
                    case "NULOS":
                        votosPorPartido[12] += numVotos;
                        // Tratamiento específico si es necesario
                        break;
                    case "ABSTENCIONES":
                        votosPorPartido[13] += numVotos;
                        // Tratamiento específico si es necesario
                        break;
                    case "BLANCOS":
                        votosPorPartido[14] += numVotos;
                        // Tratamiento específico si es necesario
                        break;
                    case "ELECTORES":
                        votosPorPartido[15] += numVotos;
                        // Tratamiento específico si es necesario
                        break;
                    default:
                        // Tratamiento para otros partidos no reconocidos
                        break;
                }
            } catch (NumberFormatException e) {
                // Manejar errores al convertir el número de votos a entero
                JOptionPane.showMessageDialog(this, "Error al procesar el número de votos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

        // Mostrar estadísticas en un cuadro de diálogo o en algún otro componente de la GUI
        StringBuilder estadisticas = new StringBuilder();
        estadisticas.append("Estadísticas de Votos:\n");
        estadisticas.append("Total de Votos: ").append(totalVotos).append("\n\n");
        estadisticas.append("Votos por Partido:\n");
        estadisticas.append("AEEV: ").append(votosPorPartido[0]).append("\n");
        estadisticas.append("FO: ").append(votosPorPartido[1]).append("\n");
        estadisticas.append("PACMA: ").append(votosPorPartido[2]).append("\n");
        estadisticas.append("PCTE: ").append(votosPorPartido[3]).append("\n");
        estadisticas.append("PP: ").append(votosPorPartido[4]).append("\n");
        estadisticas.append("PSOE: ").append(votosPorPartido[5]).append("\n");
        estadisticas.append("PUEDE: ").append(votosPorPartido[6]).append("\n");
        estadisticas.append("PUM J: ").append(votosPorPartido[7]).append("\n");
        estadisticas.append("RC: ").append(votosPorPartido[8]).append("\n");
        estadisticas.append("SUMAR: ").append(votosPorPartido[9]).append("\n");
        estadisticas.append("VOX: ").append(votosPorPartido[10]).append("\n");
        estadisticas.append("Válidos: ").append(votosPorPartido[11]).append("\n");
        estadisticas.append("Nulos: ").append(votosPorPartido[12]).append("\n");
        estadisticas.append("Abstenciones: ").append(votosPorPartido[13]).append("\n");
        estadisticas.append("Blancos: ").append(votosPorPartido[14]).append("\n");
        estadisticas.append("Electores: ").append(votosPorPartido[15]).append("\n");

        JOptionPane.showMessageDialog(this, estadisticas.toString(), "Estadísticas de Votos", JOptionPane.INFORMATION_MESSAGE);
    }

    private void cargarDatosEnTabla() {
        // Limpiar la tabla antes de cargar nuevos datos
        modeloTabla.setRowCount(0);

        // Recorrer la lista de votos y añadir cada voto como una fila en la tabla
        ListNode current = consultaVotos.getHead(); // Obtén la cabeza de la lista enlazada
        while (current != null) {
            VotoBusqueda voto = current.voto; // Obtén el voto de la lista enlazada
            // Añade los datos del voto como una fila en el modelo de la tabla
            modeloTabla.addRow(new Object[]{
                voto.getANIO(),
                voto.getTITULO(),
                voto.getFECHA_ELECCIONES(),
                voto.getDISTRITO(),
                voto.getSECCION(),
                voto.getMESA(),
                voto.getPARTIDO(),
                voto.getNUM_VOTOS()
            });
            current = current.next; // Avanza al siguiente nodo de la lista enlazada
        }
    }

    private void limpiarTabla() {
        while (modeloTabla.getRowCount() > 0) {
            modeloTabla.removeRow(0);
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EstadisticoBusquedaVotos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EstadisticoBusquedaVotos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EstadisticoBusquedaVotos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EstadisticoBusquedaVotos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EstadisticoBusquedaVotos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton buscarVotos;
    private javax.swing.JToggleButton estadistico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton retroceder;
    private javax.swing.JTextField txtDistrito;
    private javax.swing.JTextField txtMesa;
    private javax.swing.JTextField txtPartido;
    private javax.swing.JTextField txtSeccion;
    // End of variables declaration//GEN-END:variables
}
